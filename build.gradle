plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

group = "${projectGroup}"
version = "${projectVersion}"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

configurations.configureEach {
	resolutionStrategy {
		cacheChangingModulesFor 0, 'seconds'
		cacheDynamicVersionsFor 0, 'seconds'
	}
}

dependencies {
// Spring Boot 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter'                 // 스프링 부트 핵심
	implementation 'org.springframework.boot:spring-boot-starter-web'             // REST 및 웹 애플리케이션
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'        // JPA 통합
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'      // Redis 통합

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'       // SpringDoc OpenAPI 활용

	implementation "io.github.cdimascio:java-dotenv:${dotEnvVersion}"             // DotEnv 활용

	implementation 'com.fasterxml.jackson.core:jackson-databind'                    // Jackson JSON 통합

	// Spring AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Spring Security 의존성
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// MyBatis
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}" // MyBatis 통합

	// MariaDB
	implementation "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"      // MariaDB 연동
	runtimeOnly "org.mariadb.jdbc:mariadb-java-client"                           // MariaDB 드라이버 런타임

	// Lombok (코드 생성을 도와주는 도구)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Boot 개발 도구 (핫 리로드 등 편의 기능 제공)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// JWT (JSON Web Token 관리 및 처리)
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'      // 기본 테스트
	testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisVersion}" // MyBatis 테스트
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                 // JUnit 런처
}

tasks.named('test') {
	useJUnitPlatform()
}
